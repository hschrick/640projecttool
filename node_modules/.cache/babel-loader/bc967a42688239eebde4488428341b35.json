{"ast":null,"code":"import _classCallCheck from \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/src/components/landingpage.js\";\nimport React, { Component } from 'react';\nimport { Grid, Cell, Footer, FooterSection, FooterLinkList } from 'react-mdl';\nimport Typist from 'react-typist';\nimport Typing from 'react-typing-animation';\n\nvar Landing =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Landing, _Component);\n\n  function Landing() {\n    _classCallCheck(this, Landing);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Landing).apply(this, arguments));\n  }\n\n  _createClass(Landing, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"executive-summary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        className: \"aboutme-side\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(Typing, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, \"Appium is a free automation framework that is open source. Appium is built for automating tests for ios, Android and Windows apps. Appium allows you to automate testing on your application without re-compiling it. Its cross platform ability allows you to to write tests in just about any mobile friendly language whether it be objective-c, swift, Java, C# etc and test it live on a server.\", React.createElement(Typing, {\n        speed: .5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), \"Appium is better described as a mobile version of Selenium which is a web browser automation tool for testing. The difference with Appium being that it takes into account and uses Selenium type commands for actions like swiping, zooming with more than one gesture and pressing instead of clicking.\", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }), \"Appium not only works for testing native applications but also for hybrid applications which are apps that contain mobile programs built in html5/javascript inside of native code like objective-c/swift. The benefit of writing hybrid programs is that you are able to write the same code for multiple platforms which helps test costs and time costs and Appium being cross platform is perfect for testing these cases by allowing the reuse of tests/code for each platform.\"))));\n    }\n  }]);\n\n  return Landing;\n}(Component);\n\nexport default Landing;","map":{"version":3,"sources":["/Users/harrisschrick/Desktop/appium-project-website/website4/ws4/appiumproject/src/components/landingpage.js"],"names":["React","Component","Grid","Cell","Footer","FooterSection","FooterLinkList","Typist","Typing","Landing"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,IAAR,EAAcC,IAAd,EAAoBC,MAApB,EAA4BC,aAA5B,EAA2CC,cAA3C,QAAgE,WAAhE;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;;IAKMC,O;;;;;;;;;;;;;6BACI;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA;AAAG,QAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA4B,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kZAA6Y,oBAAC,MAAD;AAAQ,QAAA,KAAK,EAAE,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAA7Y,EAAia;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAja,+SACgR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADhR,ydAA5B,CADA,CADJ,CADF;AAmBD;;;;EArBmBR,S;;AAwBtB,eAAeQ,OAAf","sourcesContent":["import React, {Component} from 'react';\nimport {Grid, Cell, Footer, FooterSection, FooterLinkList} from 'react-mdl';\nimport Typist from 'react-typist';\nimport Typing from 'react-typing-animation';\n\n\n\n\nclass Landing extends Component {\n  render(){\n    return(\n      <div>\n          <div className=\"executive-summary\">\n          <p className=\"aboutme-side\"><Typing>Appium is a free automation framework that is open source. Appium is built for automating tests for ios, Android and Windows apps. Appium allows you to automate testing on your application without re-compiling it. Its cross platform ability allows you to to write tests in just about any mobile friendly language whether it be objective-c, swift, Java, C# etc and test it live on a server.<Typing speed={.5}/><br/>\n             Appium is better described as a mobile version of Selenium which is a web browser automation tool for testing. The difference with Appium being that it takes into account and uses Selenium type commands for actions like swiping, zooming with more than one gesture and pressing instead of clicking.<br/>\nAppium not only works for testing native applications but also for hybrid applications which are apps that contain mobile programs built in html5/javascript inside of native code like objective-c/swift. The benefit of writing hybrid programs is that you are able to write the same code for multiple platforms which helps test costs and time costs and Appium being cross platform is perfect for testing these cases by allowing the reuse of tests/code for each platform.\n                      </Typing></p>\n      </div>\n\n\n\n\n\n\n\n\n          </div>\n\n    )\n  }\n}\n\nexport default Landing;\n"]},"metadata":{},"sourceType":"module"}